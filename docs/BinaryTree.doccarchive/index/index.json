{"interfaceLanguages":{"swift":[{"children":[{"title":"Starting out","type":"groupMarker"},{"path":"\/documentation\/binarytree\/howtouse","title":"How to use","type":"article"},{"children":[{"title":"Creating Trees","type":"groupMarker"},{"path":"\/tutorials\/binarytree\/creatingtrees","title":"Creating Trees","type":"project"},{"title":"Traversing Trees","type":"groupMarker"},{"path":"\/tutorials\/binarytree\/traversingtrees","title":"Traversing Trees","type":"project"}],"path":"\/tutorials\/toc","title":"Binary Trees Tutorial","type":"overview"},{"title":"Traverse a Tree","type":"groupMarker"},{"path":"\/tutorials\/binarytree\/traversingtrees","title":"Traversing Trees","type":"project"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/binarytree\/realmbinarytree\/init(data:)","title":"init(data: String?)","type":"init"},{"path":"\/documentation\/binarytree\/realmbinarytree\/init(left:right:data:)","title":"init(left: RealmBinaryTree?, right: RealmBinaryTree?, data: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/binarytree\/realmbinarytree\/children","title":"var children: (left: RealmBinaryTree?, right: RealmBinaryTree?)","type":"property"},{"path":"\/documentation\/binarytree\/realmbinarytree\/data","title":"var data: String?","type":"property"},{"path":"\/documentation\/binarytree\/realmbinarytree\/leftchild","title":"var leftChild: RealmBinaryTree?","type":"property"},{"path":"\/documentation\/binarytree\/realmbinarytree\/parent","title":"var parent: RealmBinaryTree?","type":"property"},{"path":"\/documentation\/binarytree\/realmbinarytree\/rightchild","title":"var rightChild: RealmBinaryTree?","type":"property"},{"path":"\/documentation\/binarytree\/realmbinarytree\/root","title":"var root: RealmBinaryTree?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/binarytree\/realmbinarytree\/hasparent()","title":"func hasParent() -> Bool","type":"method"},{"path":"\/documentation\/binarytree\/realmbinarytree\/isempty()","title":"func isEmpty() -> Bool","type":"method"},{"path":"\/documentation\/binarytree\/realmbinarytree\/isleaf()","title":"func isLeaf() -> Bool","type":"method"},{"path":"\/documentation\/binarytree\/realmbinarytree\/isparent()","title":"func isParent() -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/binarytree\/realmbinarytree\/mapinorder(tree:closure:)","title":"func mapInOrder(tree: RealmBinaryTree, closure: (T?) -> Void)","type":"method"},{"path":"\/documentation\/binarytree\/realmbinarytree\/mappostorder(tree:closure:)","title":"func mapPostOrder(tree: RealmBinaryTree, closure: (T?) -> Void)","type":"method"},{"path":"\/documentation\/binarytree\/realmbinarytree\/mappreorder(tree:closure:)","title":"func mapPreOrder(tree: RealmBinaryTree, closure: (T?) -> Void)","type":"method"}],"path":"\/documentation\/binarytree\/realmbinarytree\/treetraversable-implementations","title":"TreeTraversable Implementations","type":"symbol"}],"path":"\/documentation\/binarytree\/realmbinarytree","title":"RealmBinaryTree","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/binarytree\/treetraversable\/mapinorder(tree:closure:)-6e040","title":"func mapInOrder(tree: RealmBinaryTree, closure: (T?) -> Void)","type":"method"}],"title":"TreeTraversable Implementations","type":"groupMarker"}],"path":"\/documentation\/binarytree\/treetraversable\/mapinorder(tree:closure:)-3t9he","title":"func mapInOrder(tree: RealmBinaryTree, closure: (T?) -> Void)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/binarytree\/treetraversable\/mappostorder(tree:closure:)-5pscs","title":"func mapPostOrder(tree: RealmBinaryTree, closure: (T?) -> Void)","type":"method"}],"title":"TreeTraversable Implementations","type":"groupMarker"}],"path":"\/documentation\/binarytree\/treetraversable\/mappostorder(tree:closure:)-96n1l","title":"func mapPostOrder(tree: RealmBinaryTree, closure: (T?) -> Void)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/binarytree\/treetraversable\/mappreorder(tree:closure:)-5n28m","title":"func mapPreOrder(tree: RealmBinaryTree, closure: (T?) -> Void)","type":"method"}],"title":"TreeTraversable Implementations","type":"groupMarker"}],"path":"\/documentation\/binarytree\/treetraversable\/mappreorder(tree:closure:)-5utrx","title":"func mapPreOrder(tree: RealmBinaryTree, closure: (T?) -> Void)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/binarytree\/treetraversable\/t","title":"TreeTraversable.T","type":"typealias"}],"path":"\/documentation\/binarytree\/treetraversable","title":"TreeTraversable","type":"protocol"}],"path":"\/documentation\/binarytree","title":"BinaryTree","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}