{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RealmBinaryTree"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/binarytree\/realmbinarytree"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/BinaryTree\/objc(cs)RLMObject"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/BinaryTree\/objc(pl)NSObject","doc:\/\/BinaryTree\/objc(pl)RLMThreadConfined","doc:\/\/BinaryTree\/objc(pl)RLMValue","doc:\/\/BinaryTree\/s7CVarArgP","doc:\/\/BinaryTree\/s28CustomDebugStringConvertibleP","doc:\/\/BinaryTree\/s23CustomStringConvertibleP","doc:\/\/BinaryTree\/SQ","doc:\/\/BinaryTree\/SH","doc:\/\/BinaryTree\/documentation\/BinaryTree\/TreeTraversable"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A Binary Tree has a Root node and at most two children (they can be "},{"type":"codeVoice","code":"nil"},{"type":"text","text":")"},{"type":"text","text":" "},{"type":"text","text":"to get both children nodes access "},{"type":"reference","isActive":true,"identifier":"doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree\/children"}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RealmBinaryTree"}],"title":"RealmBinaryTree","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"c:@M@BinaryTree@objc(cs)RealmBinaryTree","modules":[{"name":"BinaryTree"}],"navigatorTitle":[{"kind":"identifier","text":"RealmBinaryTree"}]},"hierarchy":{"paths":[["doc:\/\/BinaryTree\/documentation\/BinaryTree"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree\/init(data:)","doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree\/init(left:right:data:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree\/children","doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree\/data","doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree\/leftChild","doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree\/parent","doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree\/rightChild","doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree\/root"]},{"title":"Instance Methods","identifiers":["doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree\/hasParent()","doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree\/isEmpty()","doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree\/isLeaf()","doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree\/isParent()"]},{"title":"Default Implementations","identifiers":["doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree\/TreeTraversable-Implementations"],"generated":true}],"references":{"doc://BinaryTree/documentation/BinaryTree/RealmBinaryTree/isEmpty()":{"role":"symbol","title":"isEmpty()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isEmpty"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"A Node is empty if has no data in it"}],"identifier":"doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree\/isEmpty()","kind":"symbol","type":"topic","url":"\/documentation\/binarytree\/realmbinarytree\/isempty()"},"doc://BinaryTree/documentation/BinaryTree/TreeTraversable":{"role":"symbol","title":"TreeTraversable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeTraversable"}],"abstract":[{"type":"text","text":"Describes behaviours any tree that should be traversable must implement"}],"identifier":"doc:\/\/BinaryTree\/documentation\/BinaryTree\/TreeTraversable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TreeTraversable"}],"url":"\/documentation\/binarytree\/treetraversable"},"doc://BinaryTree/documentation/BinaryTree/RealmBinaryTree/data":{"role":"symbol","title":"data","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Data stored in this node"}],"identifier":"doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree\/data","kind":"symbol","type":"topic","url":"\/documentation\/binarytree\/realmbinarytree\/data"},"doc://BinaryTree/documentation/BinaryTree":{"role":"collection","title":"BinaryTree","abstract":[{"type":"text","text":"This is a simple implementation of a BinaryTree that can be stored using Realm."}],"identifier":"doc:\/\/BinaryTree\/documentation\/BinaryTree","kind":"symbol","type":"topic","url":"\/documentation\/binarytree"},"doc://BinaryTree/s28CustomDebugStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomDebugStringConvertible","identifier":"doc:\/\/BinaryTree\/s28CustomDebugStringConvertibleP"},"doc://BinaryTree/documentation/BinaryTree/RealmBinaryTree/isLeaf()":{"role":"symbol","title":"isLeaf()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isLeaf"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"A Node is a Leaf of the tree when has no children"}],"identifier":"doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree\/isLeaf()","kind":"symbol","type":"topic","url":"\/documentation\/binarytree\/realmbinarytree\/isleaf()"},"doc://BinaryTree/documentation/BinaryTree/RealmBinaryTree/parent":{"role":"symbol","title":"parent","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"parent"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RealmBinaryTree","preciseIdentifier":"c:@M@BinaryTree@objc(cs)RealmBinaryTree"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Every node\/subtree has a parent except the root node"}],"identifier":"doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree\/parent","kind":"symbol","type":"topic","url":"\/documentation\/binarytree\/realmbinarytree\/parent"},"doc://BinaryTree/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/BinaryTree\/SQ"},"doc://BinaryTree/documentation/BinaryTree/RealmBinaryTree/hasParent()":{"role":"symbol","title":"hasParent()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasParent"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Checks if a Node\/Subtree has a parent Node"}],"identifier":"doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree\/hasParent()","kind":"symbol","type":"topic","url":"\/documentation\/binarytree\/realmbinarytree\/hasparent()"},"doc://BinaryTree/documentation/BinaryTree/RealmBinaryTree/init(left:right:data:)":{"role":"symbol","title":"init(left:right:data:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"left"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RealmBinaryTree","preciseIdentifier":"c:@M@BinaryTree@objc(cs)RealmBinaryTree"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"right"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RealmBinaryTree","preciseIdentifier":"c:@M@BinaryTree@objc(cs)RealmBinaryTree"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Creates a new Binary Tree using two existing trees and some data for the root node"}],"identifier":"doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree\/init(left:right:data:)","kind":"symbol","type":"topic","url":"\/documentation\/binarytree\/realmbinarytree\/init(left:right:data:)"},"doc://BinaryTree/documentation/BinaryTree/RealmBinaryTree/isParent()":{"role":"symbol","title":"isParent()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isParent"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"A Node is a Parent if has at least one child"}],"identifier":"doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree\/isParent()","kind":"symbol","type":"topic","url":"\/documentation\/binarytree\/realmbinarytree\/isparent()"},"doc://BinaryTree/objc(pl)RLMValue":{"type":"unresolvable","title":"Realm.RLMValue","identifier":"doc:\/\/BinaryTree\/objc(pl)RLMValue"},"doc://BinaryTree/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/BinaryTree\/SH"},"doc://BinaryTree/documentation/BinaryTree/RealmBinaryTree/init(data:)":{"role":"symbol","title":"init(data:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Creates a new Binary Tree using the String supplied"}],"identifier":"doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree\/init(data:)","kind":"symbol","type":"topic","url":"\/documentation\/binarytree\/realmbinarytree\/init(data:)"},"doc://BinaryTree/documentation/BinaryTree/RealmBinaryTree":{"role":"symbol","title":"RealmBinaryTree","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RealmBinaryTree"}],"abstract":[{"type":"text","text":"A Binary Tree has a Root node and at most two children (they can be "},{"type":"codeVoice","code":"nil"},{"type":"text","text":")"},{"type":"text","text":" "},{"type":"text","text":"to get both children nodes access "},{"type":"reference","isActive":true,"identifier":"doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree\/children"}],"identifier":"doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RealmBinaryTree"}],"url":"\/documentation\/binarytree\/realmbinarytree"},"doc://BinaryTree/objc(cs)RLMObject":{"type":"unresolvable","title":"Realm.RLMObject","identifier":"doc:\/\/BinaryTree\/objc(cs)RLMObject"},"doc://BinaryTree/documentation/BinaryTree/RealmBinaryTree/TreeTraversable-Implementations":{"role":"collectionGroup","title":"TreeTraversable Implementations","abstract":[],"identifier":"doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree\/TreeTraversable-Implementations","kind":"article","type":"topic","url":"\/documentation\/binarytree\/realmbinarytree\/treetraversable-implementations"},"doc://BinaryTree/documentation/BinaryTree/RealmBinaryTree/root":{"role":"symbol","title":"root","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"root"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RealmBinaryTree","preciseIdentifier":"c:@M@BinaryTree@objc(cs)RealmBinaryTree"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Root node of this tree. A Root node tree has no parent"}],"identifier":"doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree\/root","kind":"symbol","type":"topic","url":"\/documentation\/binarytree\/realmbinarytree\/root"},"doc://BinaryTree/documentation/BinaryTree/RealmBinaryTree/rightChild":{"role":"symbol","title":"rightChild","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"rightChild"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RealmBinaryTree","preciseIdentifier":"c:@M@BinaryTree@objc(cs)RealmBinaryTree"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Right child of this subtree"}],"identifier":"doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree\/rightChild","kind":"symbol","type":"topic","url":"\/documentation\/binarytree\/realmbinarytree\/rightchild"},"doc://BinaryTree/objc(pl)RLMThreadConfined":{"type":"unresolvable","title":"Realm.RLMThreadConfined","identifier":"doc:\/\/BinaryTree\/objc(pl)RLMThreadConfined"},"doc://BinaryTree/documentation/BinaryTree/RealmBinaryTree/children":{"role":"symbol","title":"children","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"children"},{"kind":"text","text":": (left"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RealmBinaryTree","preciseIdentifier":"c:@M@BinaryTree@objc(cs)RealmBinaryTree"},{"kind":"text","text":"?, right"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RealmBinaryTree","preciseIdentifier":"c:@M@BinaryTree@objc(cs)RealmBinaryTree"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Both "},{"type":"reference","isActive":true,"identifier":"doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree\/leftChild"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree\/rightChild"},{"type":"text","text":" children of this subtree"}],"identifier":"doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree\/children","kind":"symbol","type":"topic","url":"\/documentation\/binarytree\/realmbinarytree\/children"},"doc://BinaryTree/documentation/BinaryTree/RealmBinaryTree/leftChild":{"role":"symbol","title":"leftChild","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"leftChild"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RealmBinaryTree","preciseIdentifier":"c:@M@BinaryTree@objc(cs)RealmBinaryTree"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Left child of this Subtree"}],"identifier":"doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree\/leftChild","kind":"symbol","type":"topic","url":"\/documentation\/binarytree\/realmbinarytree\/leftchild"},"doc://BinaryTree/s23CustomStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomStringConvertible","identifier":"doc:\/\/BinaryTree\/s23CustomStringConvertibleP"},"doc://BinaryTree/objc(pl)NSObject":{"type":"unresolvable","title":"ObjectiveC.NSObjectProtocol","identifier":"doc:\/\/BinaryTree\/objc(pl)NSObject"},"doc://BinaryTree/s7CVarArgP":{"type":"unresolvable","title":"Swift.CVarArg","identifier":"doc:\/\/BinaryTree\/s7CVarArgP"}}}