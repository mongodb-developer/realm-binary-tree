{"variants":[{"paths":["\/documentation\/binarytree\/realmbinarytree\/treetraversable-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree\/TreeTraversable-Implementations","interfaceLanguage":"swift"},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree\/mapInOrder(tree:closure:)","doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree\/mapPostOrder(tree:closure:)","doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree\/mapPreOrder(tree:closure:)"],"generated":true}],"kind":"article","metadata":{"modules":[{"name":"BinaryTree"}],"role":"collectionGroup","title":"TreeTraversable Implementations"},"hierarchy":{"paths":[["doc:\/\/BinaryTree\/documentation\/BinaryTree","doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree"]]},"references":{"doc://BinaryTree/documentation/BinaryTree/RealmBinaryTree/mapPostOrder(tree:closure:)":{"role":"symbol","title":"mapPostOrder(tree:closure:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"mapPostOrder"},{"kind":"text","text":"("},{"kind":"externalParam","text":"tree"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RealmBinaryTree","preciseIdentifier":"c:@M@BinaryTree@objc(cs)RealmBinaryTree"},{"kind":"text","text":", "},{"kind":"externalParam","text":"closure"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:10BinaryTree0B11TraversableP1Ta"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Algorithm Postorder(tree)"}],"identifier":"doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree\/mapPostOrder(tree:closure:)","kind":"symbol","type":"topic","url":"\/documentation\/binarytree\/realmbinarytree\/mappostorder(tree:closure:)"},"doc://BinaryTree/documentation/BinaryTree/RealmBinaryTree/mapPreOrder(tree:closure:)":{"role":"symbol","title":"mapPreOrder(tree:closure:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"mapPreOrder"},{"kind":"text","text":"("},{"kind":"externalParam","text":"tree"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RealmBinaryTree","preciseIdentifier":"c:@M@BinaryTree@objc(cs)RealmBinaryTree"},{"kind":"text","text":", "},{"kind":"externalParam","text":"closure"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:10BinaryTree0B11TraversableP1Ta"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Algorithm Preorder(tree)"}],"identifier":"doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree\/mapPreOrder(tree:closure:)","kind":"symbol","type":"topic","url":"\/documentation\/binarytree\/realmbinarytree\/mappreorder(tree:closure:)"},"doc://BinaryTree/documentation/BinaryTree":{"role":"collection","title":"BinaryTree","abstract":[{"type":"text","text":"This is a simple implementation of a BinaryTree that can be stored using Realm."}],"identifier":"doc:\/\/BinaryTree\/documentation\/BinaryTree","kind":"symbol","type":"topic","url":"\/documentation\/binarytree"},"doc://BinaryTree/documentation/BinaryTree/RealmBinaryTree/children":{"role":"symbol","title":"children","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"children"},{"kind":"text","text":": (left"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RealmBinaryTree","preciseIdentifier":"c:@M@BinaryTree@objc(cs)RealmBinaryTree"},{"kind":"text","text":"?, right"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RealmBinaryTree","preciseIdentifier":"c:@M@BinaryTree@objc(cs)RealmBinaryTree"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Both "},{"type":"reference","isActive":true,"identifier":"doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree\/leftChild"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree\/rightChild"},{"type":"text","text":" children of this subtree"}],"identifier":"doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree\/children","kind":"symbol","type":"topic","url":"\/documentation\/binarytree\/realmbinarytree\/children"},"doc://BinaryTree/documentation/BinaryTree/RealmBinaryTree":{"role":"symbol","title":"RealmBinaryTree","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RealmBinaryTree"}],"abstract":[{"type":"text","text":"A Binary Tree has a Root node and at most two children (they can be "},{"type":"codeVoice","code":"nil"},{"type":"text","text":")"},{"type":"text","text":" "},{"type":"text","text":"to get both children nodes access "},{"type":"reference","isActive":true,"identifier":"doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree\/children"}],"identifier":"doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RealmBinaryTree"}],"url":"\/documentation\/binarytree\/realmbinarytree"},"doc://BinaryTree/documentation/BinaryTree/RealmBinaryTree/mapInOrder(tree:closure:)":{"role":"symbol","title":"mapInOrder(tree:closure:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"mapInOrder"},{"kind":"text","text":"("},{"kind":"externalParam","text":"tree"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RealmBinaryTree","preciseIdentifier":"c:@M@BinaryTree@objc(cs)RealmBinaryTree"},{"kind":"text","text":", "},{"kind":"externalParam","text":"closure"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:10BinaryTree0B11TraversableP1Ta"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Algorithm Inorder(tree)"}],"identifier":"doc:\/\/BinaryTree\/documentation\/BinaryTree\/RealmBinaryTree\/mapInOrder(tree:closure:)","kind":"symbol","type":"topic","url":"\/documentation\/binarytree\/realmbinarytree\/mapinorder(tree:closure:)"}}}